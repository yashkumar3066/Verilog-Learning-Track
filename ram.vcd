$date
	Mon Nov 06 11:35:01 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb $end
$var wire 1 ! CLK $end
$var wire 1 " RST_N $end
$var wire 16 # data [15:0] $end
$var reg 4 $ addr [3:0] $end
$var reg 1 % clk $end
$var reg 1 & cs $end
$var reg 1 ' oe $end
$var reg 16 ( tb_data [15:0] $end
$var reg 1 ) we $end
$var integer 32 * i [31:0] $end
$scope module u0 $end
$var wire 4 + addr [3:0] $end
$var wire 1 % clk $end
$var wire 1 & cs $end
$var wire 16 , data [15:0] $end
$var wire 1 ' oe $end
$var wire 1 ) we $end
$var reg 16 - tmp_data [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx -
b0 ,
b0 +
bx *
0)
b0 (
0'
0&
0%
b0 $
b0 #
z"
z!
$end
#10000
1%
#20000
0%
#30000
1%
#40000
0%
#50000
1%
#60000
0%
#70000
1%
#80000
0%
#90000
b0 *
1%
#100000
0%
#110000
b11010100100100 #
b11010100100100 ,
b11010100100100 (
1&
1)
b1 *
1%
#120000
0%
#130000
b101111010000001 #
b101111010000001 ,
b101111010000001 (
b1 $
b1 +
b10 *
1%
#140000
0%
#150000
b1101011000001001 #
b1101011000001001 ,
b1101011000001001 (
b10 $
b10 +
b11 *
1%
#160000
0%
#170000
b101011001100011 #
b101011001100011 ,
b101011001100011 (
b11 $
b11 +
b100 *
1%
#180000
0%
#190000
b111101100001101 #
b111101100001101 ,
b111101100001101 (
b100 $
b100 +
b101 *
1%
#200000
0%
#210000
b1001100110001101 #
b1001100110001101 ,
b1001100110001101 (
b101 $
b101 +
b110 *
1%
#220000
0%
#230000
b1000010001100101 #
b1000010001100101 ,
b1000010001100101 (
b110 $
b110 +
b111 *
1%
#240000
0%
#250000
b101001000010010 #
b101001000010010 ,
b101001000010010 (
b111 $
b111 +
b1000 *
1%
#260000
0%
#270000
b1110001100000001 #
b1110001100000001 ,
b1110001100000001 (
b1000 $
b1000 +
b1001 *
1%
#280000
0%
#290000
b1100110100001101 #
b1100110100001101 ,
b1100110100001101 (
b1001 $
b1001 +
b1010 *
1%
#300000
0%
#310000
b1111000101110110 #
b1111000101110110 ,
b1111000101110110 (
b1010 $
b1010 +
b1011 *
1%
#320000
0%
#330000
b1100110100111101 #
b1100110100111101 ,
b1100110100111101 (
b1011 $
b1011 +
b1100 *
1%
#340000
0%
#350000
b101011111101101 #
b101011111101101 ,
b101011111101101 (
b1100 $
b1100 +
b1101 *
1%
#360000
0%
#370000
b1111011110001100 #
b1111011110001100 ,
b1111011110001100 (
b1101 $
b1101 +
b1110 *
1%
#380000
0%
#390000
b1110100111111001 #
b1110100111111001 ,
b1110100111111001 (
b1110 $
b1110 +
b1111 *
1%
#400000
0%
#410000
b10010011000110 #
b10010011000110 ,
b10010011000110 (
b1111 $
b1111 +
b0 *
1%
#420000
0%
#430000
bx #
bx ,
1'
0)
b0 $
b0 +
b1 *
1%
#440000
0%
#450000
b11010100100100 #
b11010100100100 ,
b11010100100100 -
b1 $
b1 +
b10 *
1%
#460000
0%
#470000
b101111010000001 #
b101111010000001 ,
b10 $
b10 +
b101111010000001 -
b11 *
1%
#480000
0%
#490000
b1101011000001001 #
b1101011000001001 ,
b1101011000001001 -
b11 $
b11 +
b100 *
1%
#500000
0%
#510000
b101011001100011 #
b101011001100011 ,
b100 $
b100 +
b101011001100011 -
b101 *
1%
#520000
0%
#530000
b111101100001101 #
b111101100001101 ,
b111101100001101 -
b101 $
b101 +
b110 *
1%
#540000
0%
#550000
b1001100110001101 #
b1001100110001101 ,
b110 $
b110 +
b1001100110001101 -
b111 *
1%
#560000
0%
#570000
b1000010001100101 #
b1000010001100101 ,
b1000010001100101 -
b111 $
b111 +
b1000 *
1%
#580000
0%
#590000
b101001000010010 #
b101001000010010 ,
b1000 $
b1000 +
b101001000010010 -
b1001 *
1%
#600000
0%
#610000
b1110001100000001 #
b1110001100000001 ,
b1110001100000001 -
b1001 $
b1001 +
b1010 *
1%
#620000
0%
#630000
b1100110100001101 #
b1100110100001101 ,
b1010 $
b1010 +
b1100110100001101 -
b1011 *
1%
#640000
0%
#650000
b1111000101110110 #
b1111000101110110 ,
b1111000101110110 -
b1011 $
b1011 +
b1100 *
1%
#660000
0%
#670000
b1100110100111101 #
b1100110100111101 ,
b1100 $
b1100 +
b1100110100111101 -
b1101 *
1%
#680000
0%
#690000
b101011111101101 #
b101011111101101 ,
b101011111101101 -
b1101 $
b1101 +
b1110 *
1%
#700000
0%
#710000
b1111011110001100 #
b1111011110001100 ,
b1110 $
b1110 +
b1111011110001100 -
b1111 *
1%
#720000
0%
#730000
b1110100111111001 #
b1110100111111001 ,
b1110100111111001 -
b1111 $
b1111 +
b10000 *
1%
#740000
0%
#750000
b10010011000110 #
b10010011000110 ,
b10010011000110 -
1%
