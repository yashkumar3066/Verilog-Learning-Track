#-----------------------------------------------------------
# Vivado v2022.1 (64-bit)
# SW Build 3526262 on Mon Apr 18 15:48:16 MDT 2022
# IP Build 3524634 on Mon Apr 18 20:55:01 MDT 2022
# Start of session at: Wed Aug 31 16:21:04 2022
# Process ID: 10000
# Current directory: C:/Users/asoptere/AppData/Roaming/Xilinx/Vivado
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent1768
# Log file: C:/Users/asoptere/AppData/Roaming/Xilinx/Vivado/vivado.log
# Journal file: C:/Users/asoptere/AppData/Roaming/Xilinx/Vivado\vivado.jou
# Running On: ASOPTEREAN, OS: Windows, CPU Frequency: 3492 MHz, CPU Physical cores: 6, Host memory: 34301 MB
#-----------------------------------------------------------
start_gui
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vpk120_es:part0:1.2 available at C:/Xilinx/Vivado/2022.1/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vpk120/es/1.2/board.xml as part xcvp1202-vsva2785-2mp-e-s-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:vpk120_es_revb:part0:1.0 available at C:/Xilinx/Vivado/2022.1/data/xhub/boards/XilinxBoardStore/boards/Xilinx/vpk120_revb/es/1.0/board.xml as part xcvp1202-vsva2785-2mp-e-s-es1 specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu208ld:part0:2.0 available at C:/Xilinx/Vivado/2022.1/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu208ld/production/2.0/board.xml as part xczu58dr-fsvg1517-2-i specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu216ld:part0:2.0 available at C:/Xilinx/Vivado/2022.1/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu216ld/production/2.0/board.xml as part xczu59dr-ffvf1760-2-i specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu670:part0:2.0 available at C:/Xilinx/Vivado/2022.1/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu670/2.0/board.xml as part xczu67dr-fsve1156-2-i specified in board_part file is either invalid or not available
WARNING: [Board 49-26] cannot add Board Part xilinx.com:zcu670ld:part0:1.0 available at C:/Xilinx/Vivado/2022.1/data/xhub/boards/XilinxBoardStore/boards/Xilinx/zcu670ld/1.0/board.xml as part xczu57dr-fsve1156-2-i specified in board_part file is either invalid or not available
open_project E:/UpgradeProjects/Cora-Z7/hw/proj/hw.xpr
WARNING: [filemgmt 56-3] IP Output Repository Path: Could not find the directory 'E:/UpgradeProjects/Cora-Z7/hw/proj/cache'.
Scanning sources...
Finished scanning sources
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'e:/UpgradeProjects/Cora-Z7/hw/repo'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2022.1/data/ip'.
WARNING: [BD 41-1661] One or more IPs have been locked in the design 'design_1.bd'. Please run report_ip_status for more details and recommendations on how to fix this issue.
List of locked IPs:
design_1_auto_pc_0
design_1_axi_gpio_0_0
design_1_ps7_0_axi_periph_0
design_1_xbar_0

INFO: [Project 1-230] Project 'hw.xpr' upgraded for this version of Vivado.
open_project: Time (s): cpu = 00:00:17 ; elapsed = 00:00:08 . Memory (MB): peak = 1391.992 ; gain = 78.844
report_ip_status -name ip_status 
update_compile_order -fileset sources_1
upgrade_ip [get_ips  {design_1_ps7_0_axi_periph_0 design_1_axi_gpio_0_0}] -log ip_upgrade.log
Reading block design file <E:/UpgradeProjects/Cora-Z7/hw/proj/hw.srcs/sources_1/bd/design_1/design_1.bd>...
Adding component instance block -- digilentinc.com:IP:PWM:2.0 - PWM_0
Adding component instance block -- xilinx.com:ip:axi_gpio:2.0 - axi_gpio_0
Adding component instance block -- xilinx.com:ip:processing_system7:5.5 - processing_system7_0
Adding component instance block -- xilinx.com:ip:axi_interconnect:2.1 - ps7_0_axi_periph
Adding component instance block -- xilinx.com:ip:axi_crossbar:2.1 - xbar
Adding component instance block -- xilinx.com:ip:axi_protocol_converter:2.1 - auto_pc
Adding component instance block -- xilinx.com:ip:proc_sys_reset:5.0 - rst_ps7_0_50M
Adding component instance block -- xilinx.com:ip:xadc_wiz:3.3 - xadc_wiz_0
Successfully read diagram <design_1> from block design file <E:/UpgradeProjects/Cora-Z7/hw/proj/hw.srcs/sources_1/bd/design_1/design_1.bd>
Upgrading 'E:/UpgradeProjects/Cora-Z7/hw/proj/hw.srcs/sources_1/bd/design_1/design_1.bd'
INFO: [IP_Flow 19-3422] Upgraded design_1_axi_gpio_0_0 (AXI GPIO 2.0) from revision 26 to revision 28
INFO: [IP_Flow 19-3422] Upgraded design_1_ps7_0_axi_periph_0 (AXI Interconnect 2.1) from revision 25 to revision 27
Wrote  : <E:\UpgradeProjects\Cora-Z7\hw\proj\hw.srcs\sources_1\bd\design_1\design_1.bd> 
Wrote  : <E:/UpgradeProjects/Cora-Z7/hw/proj/hw.srcs/sources_1/bd/design_1/ui/bd_1f5defd0.ui> 
INFO: [Coretcl 2-1525] Wrote upgrade log to 'E:/UpgradeProjects/Cora-Z7/hw/proj/ip_upgrade.log'.
upgrade_ip: Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 1549.328 ; gain = 124.184
export_ip_user_files -of_objects [get_ips {design_1_ps7_0_axi_periph_0 design_1_axi_gpio_0_0}] -no_script -sync -force -quiet
source E:/UpgradeProjects/Cora-Z7/hw/scripts/checkin.tcl
# set script_dir [file normalize [file dirname [info script]]]
# foreach arg $argv {
#     puts $arg
# }
# set idx [lsearch ${argv} "-r"]
# if {${idx} != -1} {
#     set repo_path [glob -nocomplain [file normalize [lindex ${argv} [expr {${idx}+1}]]]]
# } else {
#     # Default
#     set repo_path [file normalize [file join [file dirname [info script]] ..]]
# }
# set idx [lsearch ${argv} "-x"]
# if {${idx} != -1} {
#     set xpr_path [glob -nocomplain [file normalize [lindex ${argv} [expr {${idx}+1}]]]]
# } else {
#     # Default
#     set xpr_path [glob -nocomplain "${repo_path}/proj/*.xpr"]
# }
# if {[llength ${xpr_path}] != 1} {
#     puts "ERROR: XPR not found"
# } else {
#     set xpr_path [lindex ${xpr_path} 0]
# }
# set idx [lsearch ${argv} "-v"]
# if {${idx} != -1} {
#     set vivado_version [lindex ${argv}]
# } else {
#     set vivado_version [version -short]
# }
# set vivado_version [lindex $argv 2];
# set force_overwrite_info_script 0;
# set proj_file [file tail $xpr_path]
# set proj_dir [file dirname $xpr_path]
# set proj_name [file rootname [file tail $proj_file]]
# puts "INFO: Checking project \"$proj_file\" into version control."
INFO: Checking project "hw.xpr" into version control.
# set already_opened [get_projects -filter "DIRECTORY==$proj_dir && NAME==$proj_name"]
# if {[llength $already_opened] == 0} {
#     open_project $xpr_path
# } else {
#     current_project [lindex $already_opened 0]
# }
# set required_dirs [list                 \
#     $repo_path/proj                     \
#     $repo_path/hw_handoff               \
#     $repo_path/src                      \
#     $repo_path/src/bd                   \
#     $repo_path/src/constraints          \
#     $repo_path/src/ip                   \
#     $repo_path/src/hdl                  \
#     $repo_path/src/other                \
#     $repo_path/repo                     \
#     $repo_path/repo/local               \
# ]
# set required_files [list                \
#     $repo_path/proj/.keep               \
#     $repo_path/hw_handoff/.keep         \
#     $repo_path/src/bd/.keep             \
#     $repo_path/src/constraints/.keep    \
#     $repo_path/src/ip/.keep             \
#     $repo_path/src/hdl/.keep            \
#     $repo_path/src/other/.keep          \
#     $repo_path/repo/local/.keep         \
# ]
# set files [list]
# foreach d $required_dirs {
#     if {[file exists $d] == 0} {
#         file mkdir $d
#     }
# }
# foreach f $required_files {
#     if {[file exists $f] == 0} {
#         close [open $f "w"]
#     }
# }
# set bd_files [get_files -filter "NAME=~*.bd && NAME!~*/bd/*/ip/*"]
# if {[llength $bd_files] > 1} {
#     puts "ERROR: This script cannot handle projects containing more than one block design!"
# } elseif {[llength $bd_files] == 1} {
#     set bd_file [lindex $bd_files 0]
#     open_bd_design $bd_file
#     set bd_name [file tail [file rootname [get_property NAME $bd_file]]]
#     set script_name "$repo_path/src/bd/${bd_name}.tcl"
#     puts "INFO: Checking in ${script_name} to version control."
#     write_bd_tcl -force -no_ip_version -make_local $script_name
#     # TODO: Add support for "Add Module" IPI features (check in hdl files included in sources_1, but not any ip fileset)
# } else {
#     foreach source_file [get_files -of_objects [get_filesets sources_1]] {
#         set origin [get_property name $source_file]
#         set skip 0
#         if {[file extension $origin] == ".vhd"} {
#             set subdir hdl
#         } elseif {[file extension $origin] == ".v"} {
#             set subdir hdl
#         } elseif {[file extension $origin] == ".sv"} {
#             set subdir hdl
#         } elseif {[file extension $origin] != ".bd" && [file extension $origin] != ".xci"} {
#             set subdir other
#         } else {
#             set skip 1
#         }
#         
#         foreach ip [get_ips] {
#             set ip_dir [get_property IP_DIR $ip]
#             set source_length [string length $source_file]
#             set dir_length [string length $ip_dir]
#             if {$source_length >= $dir_length && [string range $source_file 0 $dir_length-1] == $ip_dir} {
#                 set skip 1
#             }
#         }
#         
#         if {$skip == 0} {
#             puts "INFO: Checking in [file tail $origin] to version control."
#             set target $repo_path/src/$subdir/[file tail $origin]
#             if {[file exists $target] == 0} { # TODO: this may not be safe; remind users to make sure to delete any unused files from version control
#                 file copy -force $origin $target
#             }
#         }
#     }
# 	
# #Convert each core container back to its original format
# 	foreach ip [get_ips] { 
# 	set ip_core_cont [get_property IP_CORE_CONTAINER $ip]
# 	if {[llength ${ip_core_cont}] != 0} {
# 		puts "INFO: Found $ip_core_cont for $ip"
# 		puts "Convert $ip currently in the core container format into the expanded form of the non-core container format"
# 		convert_ips -force -from_core_container [get_files  [get_property ip_file $ip]]
# 	}
# }
#     foreach ip [get_ips] {
#         set origin [get_property ip_file $ip]
#         set ipname [get_property name $ip]
#         set dir "$repo_path/src/ip/$ipname"
#         if {[file exists $dir] == 0} {
#             file mkdir $dir
#         }
#         set target $dir/[file tail $origin]
#         puts "INFO: Checking in [file tail $origin] to version control."
#         if {[file exists $target] == 0} {
#             # TODO: this may not be safe; remind users to make sure to delete any unused files from version control
#             file copy -force $origin $target
#         }
#     }
#     # TODO: foreach file in /src/ip, if it wasn't just checked in, delete it
# }
INFO: Checking in E:/UpgradeProjects/Cora-Z7/hw/src/bd/design_1.tcl to version control.
INFO: [BD 5-148] Tcl file written out <E:/UpgradeProjects/Cora-Z7/hw/src/bd/design_1.tcl>.

WARNING: [BD 5-339] The block design <design_1> has not been validated, therefore, a block design created using this Tcl file
<E:/UpgradeProjects/Cora-Z7/hw/src/bd/design_1.tcl> may result in errors during validation.
# foreach constraint_file [get_files -of_objects [get_filesets constrs_1]] {
#     set origin [get_property name $constraint_file]
#     set target $repo_path/src/constraints/[file tail $origin]
#     puts "INFO: Checking in [file tail $origin] to version control."
#         if {[file exists $target] == 0} { # TODO: this may not be safe; remind users to make sure to delete any unused files from version control
#         file copy -force $origin $target
#     }
# }
INFO: Checking in Cora-Z7-07S-Master.xdc to version control.
# if {[file exists $repo_path/project_info.tcl] == 0 || $force_overwrite_info_script != 0} {
#     set proj_obj [get_projects [file rootname $proj_file]]
#     
#     set board_part [current_board_part -quiet]
#     set part [get_property part $proj_obj]
#     set default_lib [get_property default_lib $proj_obj]
#     set simulator_language [get_property simulator_language $proj_obj]
#     set target_language [get_property target_language $proj_obj]
#     set directives "#Custom directives for synthesis and implementation"
# 
# 	#Fetch non-default synthesis and implementation settings
# 	foreach prop [list_property [get_runs synth_1] STEPS.*.ARGS.*] {
# 		set Dval [list_property_value -default $prop [get_runs synth_1]]
# 		set val [get_property $prop [get_runs synth_1]]
# 		if {$Dval!=$val} {
# 			append directives "\n\tset_property " $prop " " $val " \[get_runs synth_1\]"
#     }}
# 
# 	foreach prop [list_property [get_runs impl_1] STEPS.*.ARGS.*] {
# 		set Dval [list_property_value -default $prop [get_runs impl_1]]
# 		set val [get_property $prop [get_runs impl_1]]
# 		if {$Dval!=$val} {
# 			append directives "\n\tset_property " $prop " " $val " \[get_runs impl_1\]"
#     }}
# 
#     puts "INFO: Checking in project_info.tcl to version control."
#     
#     set var_map [list <part> $part                             \
#                       <default_lib> $default_lib               \
#                       <simulator_language> $simulator_language \
#                       <target_language> $target_language       \
#                       <directives> $directives \
#     ]
# 
# 	# Even if current_board_part is empty, the replacement must be made, otherwise placeholder will be considered a board name upon checkout
#     lappend var_map <board_part> $board_part
#     
#     set file_name $repo_path/project_info.tcl
#     set dfid [open $file_name "w"]
#     set sfid [open $script_dir/templates/project_info.tcl "r"]
#     
#     while { [gets $sfid line] >= 0 } {
#         puts $dfid [string map $var_map $line]
#     }
#     
#     close $dfid
#     close $sfid
# }
# set post_build_script [file join ${repo_path} post_build.tcl]
# if {[file exists ${post_build_script}] == 0} {
#     puts "WARNING: This repository does not contain a post_build script. creating one now."
#     set target ${post_build_script}
#     set origin [file join ${script_dir} templates post_build.tcl]
#     file copy -force ${origin} ${target}
# }
# set master_gitignore [file join $repo_path .gitignore]
# if {[file exists $master_gitignore] == 0} {
#     puts "WARNING: This repository does not contain a master gitignore. creating one now."
#     set target $master_gitignore
#     set origin $script_dir/templates/hw.gitignore
#     file copy -force $origin $target
# }
# puts "INFO: Project $proj_file has been checked into version control"
INFO: Project hw.xpr has been checked into version control
close_project
source E:/UpgradeProjects/Cora-Z7/hw/scripts/checkout.tcl
# set idx [lsearch ${argv} "-r"]
# if {${idx} != -1} {
#     set repo_path [glob -nocomplain [file normalize [lindex ${argv} [expr {${idx}+1}]]]]
# } else {
#     # Default
#     set repo_path [file normalize [file dirname [info script]]/..]
# }
# set idx [lsearch ${argv} "-x"]
# if {${idx} != -1} {
#     set xpr_path [file normalize [lindex ${argv} [expr {${idx}+1}]]]
# } else {
#     # Default
#     set xpr_path [file join ${repo_path} proj [file tail $repo_path]].xpr]
# }
# set idx [lsearch ${argv} "-v"]
# if {${idx} != -1} {
#     set vivado_version [lindex ${argv} [expr {${idx}+1}]]
# } else {
#     # Default
#     set vivado_version [version -short]
# }
# set idx [lsearch ${argv} "-b"]
# if {${idx} != -1} {
#     set build_when_checked_out 1
# } else {
#     # Default
#     set build_when_checked_out 0
# }
# set idx [lsearch ${argv} "-no-block"]
# if {${idx} != -1} {
#     set wait_on_build 0
# } else {
#     # Default
#     set wait_on_build 1
# }
# set vivado_year [lindex [split $vivado_version "."] 0]
# set proj_name [file rootname [file tail $xpr_path]]
# puts "INFO: Creating new project \"$proj_name\" in [file dirname $xpr_path]"
INFO: Creating new project "hw" in E:/UpgradeProjects/Cora-Z7/hw/proj
# create_project $proj_name [file dirname $xpr_path]
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2022.1/data/ip'.
# source $repo_path/project_info.tcl
## proc set_project_properties_post_create_project {proj_name} {
##     set project_obj [get_projects $proj_name]
##     set_property "part" "xc7z007sclg400-1" $project_obj
##     set_property "board_part" "digilentinc.com:cora-z7-07s:part0:1.1" $project_obj
##     set_property "default_lib" "xil_defaultlib" $project_obj
##     set_property "simulator_language" "Mixed" $project_obj
##     set_property "target_language" "Verilog" $project_obj
## }
## proc set_project_properties_pre_add_repo {proj_name} {
##     set project_obj [get_projects $proj_name]
##     # default nothing
## }
## proc set_project_properties_post_create_runs {proj_name} {
##     set project_obj [get_projects $proj_name]
##     # default nothing
## }
# puts "INFO: Capturing board information from $repo_path/project_info.tcl"
INFO: Capturing board information from E:/UpgradeProjects/Cora-Z7/hw/project_info.tcl
# set_project_properties_post_create_project $proj_name
# set obj [get_projects $proj_name]
# set part_name [get_property "part" $obj]
# puts "INFO: Configuring project IP handling properties"
INFO: Configuring project IP handling properties
# set_property "corecontainer.enable" "0" $obj
# set_property "ip_cache_permissions" "read write" $obj
# set_property "ip_output_repo" "[file normalize "$repo_path/proj/cache"]" $obj
# if {[string equal [get_filesets -quiet sources_1] ""]} {
#     puts "INFO: Creating sources_1 fileset"
#     create_fileset -srcset sources_1
# }
# if {[string equal [get_filesets -quiet constrs_1] ""]} {
#     puts "INFO: Creating constrs_1 fileset"
#     create_fileset -constrset constrs_1
# }
# puts "INFO: capturing IP-related settings from $repo_path/project_info.tcl"
INFO: capturing IP-related settings from E:/UpgradeProjects/Cora-Z7/hw/project_info.tcl
# set_project_properties_pre_add_repo $proj_name
# puts "INFO: Setting IP repository paths"
INFO: Setting IP repository paths
# set obj [get_filesets sources_1]
# set_property "ip_repo_paths" "[file normalize $repo_path/repo]" $obj
# puts "INFO: Refreshing IP repositories"
INFO: Refreshing IP repositories
# update_ip_catalog -rebuild
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'e:/UpgradeProjects/Cora-Z7/hw/repo'.
# puts "INFO: Adding HDL sources"
INFO: Adding HDL sources
# add_files -quiet -norecurse $repo_path/src/hdl
# puts "INFO: Adding XCI IP sources"
INFO: Adding XCI IP sources
# add_files -quiet [glob -nocomplain $repo_path/src/ip/*/*.xci]
# puts "INFO: Adding constraints"
INFO: Adding constraints
# add_files -quiet -norecurse -fileset constrs_1 $repo_path/src/constraints
# set ipi_tcl_files [glob -nocomplain "$repo_path/src/bd/*.tcl"]
# set ipi_bd_files [glob -nocomplain "$repo_path/src/bd/*/*.bd"]
# if {[llength $ipi_tcl_files] > 1} {
#     # TODO: quit and log the error
#     puts "ERROR: This script cannot handle projects containing more than one block design! More than one tcl script foudn in src/bd"
# } elseif {[llength $ipi_tcl_files] == 1} {
#     # Use TCL script to rebuild block design
#     puts "INFO: Rebuilding block design from script"
#     # Create local source directory for bd
#     if {[file exist "[file rootname $xpr_path].srcs"] == 0} {
#         file mkdir "[file rootname $xpr_path].srcs"
#     }
#     if {[file exist "[file rootname $xpr_path].srcs/sources_1"] == 0} {
#         file mkdir "[file rootname $xpr_path].srcs/sources_1"
#     }
#     if {[file exist "[file rootname $xpr_path].srcs/sources_1/bd"] == 0} {
#         file mkdir "[file rootname $xpr_path].srcs/sources_1/bd"
#     }
#     # Force Non-Remote BD Flow
#     set origin_dir [pwd]
#     cd "[file rootname $xpr_path].srcs/sources_1"
#     set run_remote_bd_flow 0
#     if {[set result [catch { source [lindex $ipi_tcl_files 0] } resulttext]]} {
#         # remember global error state
#         set einfo $::errorInfo
#         set ecode $::errorCode
#         catch {cd $origin_dir}
#         return -code $result -errorcode $ecode -errorinfo $einfo $resulttext
#     }
#     cd $origin_dir
# } elseif {[llength $ipi_bd_files] > 1} {
#     # TODO: quit and log the error
#     puts "ERROR: This script cannot handle projects containing more than one block design! More than one bd file foudn in src/bd"
# } elseif {[llength $ipi_bd_files] == 1} {
#     # Add block design from .bd file and sources
#     puts "INFO: Rebuilding block design from BD fileset"
#     add_files -norecurse -quiet -fileset sources_1 [glob -nocomplain $repo_path/src/bd/*/*.bd]
#     open_bd_design [glob -nocomplain $repo_path/src/bd/*/*.bd]
#     set design_name [get_bd_designs]
#     set file "$repo_path/src/bd/$design_name/$design_name.bd"
#     set file [file normalize $file]
#     set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
#     if { ![get_property "is_locked" $file_obj] } {
#         set_property "synth_checkpoint_mode" "Hierarchical" $file_obj
#     }
# }
INFO: Rebuilding block design from script
## _tcl::get_script_folder
## version -short
## get_projects -quiet
## current_bd_design -quiet
## get_bd_cells -quiet
INFO: [BD::TCL 103-2003] Currently there is no design <design_1> in project, so creating one...
Wrote  : <E:\UpgradeProjects\Cora-Z7\hw\proj\hw.srcs\sources_1\bd\design_1\design_1.bd> 
create_bd_design: Time (s): cpu = 00:00:08 ; elapsed = 00:00:07 . Memory (MB): peak = 1720.973 ; gain = 0.000
INFO: [BD::TCL 103-2004] Making design <design_1> as current_bd_design.
INFO: [BD::TCL 103-2005] Currently the variable <design_name> is equal to "design_1".
INFO: [BD::TCL 103-2011] Checking if the following IPs exist in the project's IP catalog:  
digilentinc.com:IP:PWM:* xilinx.com:ip:axi_gpio:* xilinx.com:ip:processing_system7:* xilinx.com:ip:proc_sys_reset:* xilinx.com:ip:xadc_wiz:*  .
CRITICAL WARNING: [PSU-1]  Parameter : PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_2 has negative value -0.009 . PS DDR interfaces might fail when entering negative DQS skew values. 
CRITICAL WARNING: [PSU-2]  Parameter : PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_3 has negative value -0.033 . PS DDR interfaces might fail when entering negative DQS skew values. 
CRITICAL WARNING: [PSU-1]  Parameter : PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_2 has negative value -0.009 . PS DDR interfaces might fail when entering negative DQS skew values. 
CRITICAL WARNING: [PSU-2]  Parameter : PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_3 has negative value -0.033 . PS DDR interfaces might fail when entering negative DQS skew values. 
INFO: [Ipptcl 7-1463] No Compatible Board Interface found. Board Tab not created in customize GUI
INFO: [Device 21-403] Loading part xc7z007sclg400-1
create_bd_cell: Time (s): cpu = 00:00:05 ; elapsed = 00:00:07 . Memory (MB): peak = 2104.047 ; gain = 375.562
Slave segment '/PWM_0/PWM_AXI/PWM_AXI_reg' is being assigned into address space '/processing_system7_0/Data' at <0x43C1_0000 [ 64K ]>.
Slave segment '/axi_gpio_0/S_AXI/Reg' is being assigned into address space '/processing_system7_0/Data' at <0x4120_0000 [ 64K ]>.
Slave segment '/xadc_wiz_0/s_axi_lite/Reg' is being assigned into address space '/processing_system7_0/Data' at <0x43C0_0000 [ 64K ]>.
Wrote  : <E:\UpgradeProjects\Cora-Z7\hw\proj\hw.srcs\sources_1\bd\design_1\design_1.bd> 
Wrote  : <E:/UpgradeProjects/Cora-Z7/hw/proj/hw.srcs/sources_1/bd/design_1/ui/bd_1f5defd0.ui> 
WARNING: [BD::TCL 103-2053] This Tcl script was generated from a block design that has not been validated. It is possible that design <design_1> may result in errors during validation.
WARNING: [Coretcl 2-176] No IPs found
# foreach ip [get_ips -filter "IS_LOCKED==1"] {
#     upgrade_ip -vlnv [get_property UPGRADE_VERSIONS $ip] $ip
#     export_ip_user_files -of_objects $ip -no_script -sync -force -quiet
# }
# catch {
# 	# catch block prevents projects without a block design from erroring at this step
# 	set bd_name [get_bd_designs -of_objects [get_bd_cells /]]
# 	set bd_file [get_files $bd_name.bd]
# 	set wrapper_file [make_wrapper -files $bd_file -top -force]
# 	import_files -quiet -force -norecurse $wrapper_file
# 
# 	set obj [get_filesets sources_1]
# 	set_property "top" "${bd_name}_wrapper" $obj
# }
CRITICAL WARNING: [PSU-1]  Parameter : PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_2 has negative value -0.009 . PS DDR interfaces might fail when entering negative DQS skew values. 
CRITICAL WARNING: [PSU-2]  Parameter : PCW_UIPARAM_DDR_DQS_TO_CLK_DELAY_3 has negative value -0.033 . PS DDR interfaces might fail when entering negative DQS skew values. 
WARNING: [BD 41-927] Following properties on pin /xadc_wiz_0/s_axi_aclk have been updated from connected ip, but BD cell '/xadc_wiz_0' does not accept parameter changes, so they may not be synchronized with cell properties:
	FREQ_HZ = 50000000 
Please resolve any mismatches by directly setting properties on BD cell </xadc_wiz_0> to completely resolve these warnings.
Wrote  : <E:\UpgradeProjects\Cora-Z7\hw\proj\hw.srcs\sources_1\bd\design_1\design_1.bd> 
Verilog Output written to : E:/UpgradeProjects/Cora-Z7/hw/proj/hw.gen/sources_1/bd/design_1/synth/design_1.v
Verilog Output written to : E:/UpgradeProjects/Cora-Z7/hw/proj/hw.gen/sources_1/bd/design_1/sim/design_1.v
Verilog Output written to : E:/UpgradeProjects/Cora-Z7/hw/proj/hw.gen/sources_1/bd/design_1/hdl/design_1_wrapper.v
make_wrapper: Time (s): cpu = 00:00:07 ; elapsed = 00:00:06 . Memory (MB): peak = 2112.500 ; gain = 8.453
# if {[string equal [get_runs -quiet synth_1] ""]} {
#     puts "INFO: Creating synth_1 run"
#     create_run -name synth_1 -part $part_name -flow {Vivado Synthesis $vivado_year} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
# } else {
#     set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
#     set_property flow "Vivado Synthesis $vivado_year" [get_runs synth_1]
# }
# puts "INFO: Configuring synth_1 run"
INFO: Configuring synth_1 run
# set obj [get_runs synth_1]
# set_property "part" $part_name $obj
# puts "INFO: Setting current synthesis run"
INFO: Setting current synthesis run
# current_run -synthesis [get_runs synth_1]
# if {[string equal [get_runs -quiet impl_1] ""]} {
#     puts "INFO: Creating impl_1 run"
#     create_run -name impl_1 -part $part_name -flow {Vivado Implementation $vivado_year} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
# } else {
#     set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
#     set_property flow "Vivado Implementation $vivado_year" [get_runs impl_1]
# }
# puts "INFO: Configuring impl_1 run"
INFO: Configuring impl_1 run
# set obj [get_runs impl_1]
# set_property "part" $part_name $obj
# puts "INFO: Setting current implementation run"
INFO: Setting current implementation run
# current_run -implementation [get_runs impl_1]
# puts "INFO: capturing run settings from $repo_path/project_info.tcl"
INFO: capturing run settings from E:/UpgradeProjects/Cora-Z7/hw/project_info.tcl
# set_project_properties_post_create_runs $proj_name
# set post_build_script_path [file join ${repo_path} post_build.tcl]
# set post_build_script [glob -nocomplain ${post_build_script_path}]
# if {${build_when_checked_out}} {
#     launch_runs -to_step write_bitstream impl_1
#     # Wait until the project has been built if -no-block wasn't specified
#     if {${wait_on_build}} {
#         wait_on_run impl_1
#         puts "INFO: Build complete"
# 
#         # If it exists, run the post_build script. This can be used to export 
#         if {${post_build_script} ne ""} {
#             source ${post_build_script}
#         } else {
#             puts "INFO: No post_build script found"
#         }
#     } else {
#         if {${post_build_script} ne ""} {
#             puts "WARNING: Build launched but ${post_build_script} has not been run"
#             puts "         After the bitstream has been generated, run the command 'source ${post_build_script}'"
#         } else {
#             puts "INFO: No post_build script found"
#         }
#     }
# }
# puts "INFO: Project created: [file tail $proj_name]"
INFO: Project created: hw
# puts "INFO: Exiting digilent_vivado_checkout"
INFO: Exiting digilent_vivado_checkout
regenerate_bd_layout
update_compile_order -fileset sources_1
launch_runs impl_1 -to_step write_bitstream -jobs 12
INFO: [BD 41-1662] The design 'design_1.bd' is already validated. Therefore parameter propagation will not be re-run.
Wrote  : <E:/UpgradeProjects/Cora-Z7/hw/proj/hw.srcs/sources_1/bd/design_1/ui/bd_1f5defd0.ui> 
Verilog Output written to : E:/UpgradeProjects/Cora-Z7/hw/proj/hw.gen/sources_1/bd/design_1/synth/design_1.v
Verilog Output written to : E:/UpgradeProjects/Cora-Z7/hw/proj/hw.gen/sources_1/bd/design_1/sim/design_1.v
Verilog Output written to : E:/UpgradeProjects/Cora-Z7/hw/proj/hw.gen/sources_1/bd/design_1/hdl/design_1_wrapper.v
INFO: [BD 41-1029] Generation completed for the IP Integrator block PWM_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block axi_gpio_0 .
INFO: [IP_Flow 19-5611] Unable to find an associated reset port for the interface 'M_AXI_GP0'. A default connection has been created.
INFO: [BD 41-1029] Generation completed for the IP Integrator block processing_system7_0 .
INFO: [BD 41-1029] Generation completed for the IP Integrator block ps7_0_axi_periph/xbar .
INFO: [BD 41-1029] Generation completed for the IP Integrator block rst_ps7_0_50M .
INFO: [BD 41-1029] Generation completed for the IP Integrator block xadc_wiz_0 .
WARNING: [IP_Flow 19-4994] Overwriting existing constraint file 'e:/UpgradeProjects/Cora-Z7/hw/proj/hw.gen/sources_1/bd/design_1/ip/design_1_auto_pc_0/design_1_auto_pc_0_ooc.xdc'
INFO: [BD 41-1029] Generation completed for the IP Integrator block ps7_0_axi_periph/s00_couplers/auto_pc .
Exporting to file E:/UpgradeProjects/Cora-Z7/hw/proj/hw.gen/sources_1/bd/design_1/hw_handoff/design_1.hwh
Generated Hardware Definition File E:/UpgradeProjects/Cora-Z7/hw/proj/hw.gen/sources_1/bd/design_1/synth/design_1.hwdef
[Wed Aug 31 16:26:50 2022] Launched design_1_axi_gpio_0_0_synth_1, design_1_PWM_0_0_synth_1, design_1_processing_system7_0_0_synth_1, design_1_xadc_wiz_0_0_synth_1, design_1_rst_ps7_0_50M_0_synth_1, design_1_auto_pc_0_synth_1, design_1_xbar_0_synth_1, synth_1...
Run output will be captured here:
design_1_axi_gpio_0_0_synth_1: E:/UpgradeProjects/Cora-Z7/hw/proj/hw.runs/design_1_axi_gpio_0_0_synth_1/runme.log
design_1_PWM_0_0_synth_1: E:/UpgradeProjects/Cora-Z7/hw/proj/hw.runs/design_1_PWM_0_0_synth_1/runme.log
design_1_processing_system7_0_0_synth_1: E:/UpgradeProjects/Cora-Z7/hw/proj/hw.runs/design_1_processing_system7_0_0_synth_1/runme.log
design_1_xadc_wiz_0_0_synth_1: E:/UpgradeProjects/Cora-Z7/hw/proj/hw.runs/design_1_xadc_wiz_0_0_synth_1/runme.log
design_1_rst_ps7_0_50M_0_synth_1: E:/UpgradeProjects/Cora-Z7/hw/proj/hw.runs/design_1_rst_ps7_0_50M_0_synth_1/runme.log
design_1_auto_pc_0_synth_1: E:/UpgradeProjects/Cora-Z7/hw/proj/hw.runs/design_1_auto_pc_0_synth_1/runme.log
design_1_xbar_0_synth_1: E:/UpgradeProjects/Cora-Z7/hw/proj/hw.runs/design_1_xbar_0_synth_1/runme.log
synth_1: E:/UpgradeProjects/Cora-Z7/hw/proj/hw.runs/synth_1/runme.log
[Wed Aug 31 16:26:50 2022] Launched impl_1...
Run output will be captured here: E:/UpgradeProjects/Cora-Z7/hw/proj/hw.runs/impl_1/runme.log
launch_runs: Time (s): cpu = 00:00:40 ; elapsed = 00:00:40 . Memory (MB): peak = 2210.164 ; gain = 81.945
write_hw_platform -fixed -include_bit -force -file E:/UpgradeProjects/Cora-Z7/hw/hw_handoff/design_1_wrapper.xsa
INFO: [Project 1-1918] Creating Hardware Platform: E:/UpgradeProjects/Cora-Z7/hw/hw_handoff/design_1_wrapper.xsa ...
WARNING: [Project 1-645] Board images not set in Hardware Platform.
INFO: [Project 1-1943] The Hardware Platform can be used for Hardware
INFO: [Project 1-1941] Successfully created Hardware Platform: E:/UpgradeProjects/Cora-Z7/hw/hw_handoff/design_1_wrapper.xsa
INFO: [Hsi 55-2053] elapsed time for repository (C:/Xilinx/Vivado/2022.1/data/embeddedsw) loading 1 seconds
archive_project E:/UpgradeProjects/Archives/Cora-Z7/07S/XADC/2022.1/Cora-Z7-07S-XADC-hw.xpr.zip -temp_dir C:/Users/asoptere/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-10000-ASOPTEREAN -force -include_local_ip_cache
INFO: [Coretcl 2-137] starting archive...
INFO: [Coretcl 2-1499] Saving project copy to temporary location 'C:/Users/asoptere/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-10000-ASOPTEREAN' for archiving project
Scanning sources...
Finished scanning sources
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'e:/UpgradeProjects/Cora-Z7/hw/repo'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2022.1/data/ip'.
INFO: [Coretcl 2-1211] Creating project copy for archival...
INFO: [ProjectBase 1-495] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience any problem with archiving the project, please consider setting environment variable $TEMP to a shorter path.
Current project path is 'C:/Users/asoptere/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-10000-ASOPTEREAN/PrjAr/_X_'.
INFO: [Coretcl 2-1213] Including run results for 'synth_1'
INFO: [Coretcl 2-1213] Including run results for 'design_1_axi_gpio_0_0_synth_1'
INFO: [Coretcl 2-1213] Including run results for 'design_1_PWM_0_0_synth_1'
INFO: [Coretcl 2-1213] Including run results for 'design_1_processing_system7_0_0_synth_1'
INFO: [Coretcl 2-1213] Including run results for 'design_1_xadc_wiz_0_0_synth_1'
INFO: [Coretcl 2-1213] Including run results for 'design_1_rst_ps7_0_50M_0_synth_1'
INFO: [Coretcl 2-1213] Including run results for 'design_1_auto_pc_0_synth_1'
INFO: [Coretcl 2-1213] Including run results for 'design_1_xbar_0_synth_1'
INFO: [Coretcl 2-1213] Including run results for 'impl_1'
INFO: [Coretcl 2-133] re-setting run 'design_1_axi_gpio_0_0_impl_1'...
INFO: [Coretcl 2-133] re-setting run 'design_1_PWM_0_0_impl_1'...
INFO: [Coretcl 2-133] re-setting run 'design_1_processing_system7_0_0_impl_1'...
INFO: [Coretcl 2-133] re-setting run 'design_1_xadc_wiz_0_0_impl_1'...
INFO: [Coretcl 2-133] re-setting run 'design_1_rst_ps7_0_50M_0_impl_1'...
INFO: [Coretcl 2-133] re-setting run 'design_1_auto_pc_0_impl_1'...
INFO: [Coretcl 2-133] re-setting run 'design_1_xbar_0_impl_1'...
INFO: [Coretcl 2-1212] Importing remotely added design sources and verilog include files (if any)...
INFO: [filemgmt 20-334] All file(s) are already imported in fileset: 'design_1_PWM_0_0'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'design_1_PWM_0_0'
INFO: [filemgmt 20-334] All file(s) are already imported in fileset: 'design_1_auto_pc_0'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'design_1_auto_pc_0'
INFO: [filemgmt 20-334] All file(s) are already imported in fileset: 'design_1_axi_gpio_0_0'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'design_1_axi_gpio_0_0'
INFO: [filemgmt 20-334] All file(s) are already imported in fileset: 'design_1_processing_system7_0_0'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'design_1_processing_system7_0_0'
INFO: [filemgmt 20-334] All file(s) are already imported in fileset: 'design_1_rst_ps7_0_50M_0'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'design_1_rst_ps7_0_50M_0'
INFO: [filemgmt 20-334] All file(s) are already imported in fileset: 'design_1_xadc_wiz_0_0'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'design_1_xadc_wiz_0_0'
INFO: [filemgmt 20-334] All file(s) are already imported in fileset: 'design_1_xbar_0'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'design_1_xbar_0'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'constrs_1'
INFO: [filemgmt 20-334] All file(s) are already imported in fileset: 'sources_1'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'sources_1'
